name: Build, Scan, Push Docker Image, and Deploy to Kubernetes

on:
  push:
    branches:
      - main 

jobs:
  build-scan-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-r:latest .

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.1/trivy_0.57.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.57.1_Linux-64bit.deb

      - name: Scan Docker image with Trivy
        run: |
          trivy image --format json --output trivy-report.json --exit-code 0 --severity CRITICAL,HIGH ${{ secrets.DOCKER_USERNAME }}/python-r:latest
        continue-on-error: true

      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Output Trivy report
        run: |
          cat trivy-report.json

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-r:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f deployment.yaml

      - name: Get Deployment Status
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl rollout status deployment/python-r-deployment

      - name: Get Pods Status
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl get pods -l app=test-python-r-app

      - name: Get Pod Logs
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl logs -l app=test-python-r-app